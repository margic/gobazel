load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test", "go_prefix")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")

# go_prefix("com.github.com/margic/gobazel/service1")

# container_image(
#     name = "service1-image",
#     # References container_pull from WORKSPACE
#     base = "@go_base//image",

#     files = [""],
#     cmd = ["Hello_deploy.jar"]
# )

go_image(
    name = "service1-image",
    binary = ":service1",
    visibility = ["//visibility:public"],
)

go_binary(
    name = "service1",
    srcs = [
        "greeting.go",
        "main.go",
    ],
    importpath = "github.com/margic/gobazel/service1",
    deps = [
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus/promhttp:go_default_library",
        "//vendor/github.com/spf13/viper:go_default_library",
        "//vendor/go.uber.org/zap:go_default_library",
    ],
    visibility = ["//visibility:public"],
)

load("@io_bazel_rules_docker//container:container.bzl", "container_push")

container_push(
    name = "push-service1-image",
    format = "Docker",
    image = ":service1-image",
    registry = "localhost:5000",
    repository = "gobazel-service1",
    tag = "dev",
    visibility = ["//visibility:public"],
)

go_test(
    name = "go_default_test",
    srcs = ["greeting_test.go"],
    embed = [":go_default_library"],
    importpath = "github.com/margic/gobazel/service1",
    deps = ["//vendor/github.com/stretchr/testify/assert:go_default_library"],
)
