load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")

go_image(
    name = "service1-image",
    embed = [":go_default_library"],
    importpath = "github.com/margic/gobazel/service1",
    visibility = ["//visibility:public"],
)

load("@io_bazel_rules_docker//container:container.bzl", "container_push")

container_push(
    name = "push-service1-image",
    format = "Docker",
    image = ":service1-image",
    registry = "index.docker.io",
    repository = "pcrofts/gobazel-service1",
    tag = "dev",
    visibility = ["//visibility:public"],
)

go_library(
    name = "go_default_library",
    srcs = [
        "greeting.go",
        "main.go",
    ],
    importpath = "github.com/margic/gobazel/service1",
    visibility = ["//:__pkg__"],
    deps = [
        "//vendor/github.com/prometheus/client_golang/prometheus/promhttp:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/github.com/spf13/viper:go_default_library",
        "//vendor/go.uber.org/zap:go_default_library",
    ],
)

go_binary(
    name = "service1",
    embed = [":go_default_library"],
    importpath = "github.com/margic/gobazel/service1",
    visibility = ["//visibility:public"],
)

go_test(
    name = "go_default_test",
    srcs = ["greeting_test.go"],
    embed = [":go_default_library"],
    importpath = "github.com/margic/gobazel/service1",
    deps = ["//vendor/github.com/stretchr/testify/assert:go_default_library"],
)
