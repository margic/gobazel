load("@k8s_deploy//:defaults.bzl", "k8s_deploy")
load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")

k8s_deploy(
    name = "deploy-ingress-rbac",
    template = ":ingress-rbac.yaml",
)

k8s_deploy(
    name = "deploy-ingress-pod",
    template = ":ingress-pod.yaml",
)

k8s_deploy(
    name = "deploy-ingress-ui",
    template = ":ingress-ui.yaml",
)

k8s_deploy(
  name = "deploy-namespace",
  template = ":namespace.yaml",
)

k8s_deploy(
  name = "deploy-registry",
  template = ":registry.yaml",
)

k8s_deploy(
  name = "deploy-monitoring",
  template = ":monitoring.yaml"
)

k8s_deploy(
  name = "deploy-services",
  template = ":services.yaml",
  images = {
    "minikube:5000/gobazel-service1:dev": "//service1:service1-image"
  },
)

# Note the plurality of "objects" here.
# ensure deploy-namespace has been run or the namespace won't be created
# bazel run //deploy:deploy-namespace.apply
k8s_objects(
   name = "create",
   objects = [
    "//deploy:deploy-namespace.apply",
    "//deploy:deploy-ingress-rbac.apply",
    "//deploy:deploy-ingress-pod.apply",
    "//deploy:deploy-ingress-ui.apply",
    "//deploy:deploy-registry.apply",
    "//deploy:deploy-monitoring.apply",
    "//deploy:deploy-services.apply",
   ]
)

k8s_objects(
   name = "delete",
   objects = [
    "//deploy:deploy-services.delete",
    "//deploy:deploy-monitoring.delete", 
    "//deploy:deploy-registry.delete",
    "//deploy:deploy-ingress-ui.delete",
    "//deploy:deploy-ingress-pod.apply",
    "//deploy:deploy-ingress-rbac.delete",
    "//deploy:deploy-namespace.delete",
   ]
)